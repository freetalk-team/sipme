
<div class="w3-container max-width center">

	<div class="cr ci">
		<% if (Config.company.logo) { %>
			<img class="x64" src="<%- Config.company.logo %>">
		<% } %>
		<h1 class="text-stroke"><%- Config.company.name %></h1>
	</div>

	<p class="inconsolata">Setup your account</p>


	<form id="regForm" class="wizard" action="/setup" method="post">
		<h1 class="text-stroke wm6">Register:</h1>
		<!-- One "tab" for each step in the form: -->
		<div class="tab">Name:
		<p><input placeholder="First name..." oninput="this.className = ''" name="fname"></p>
		<p><input placeholder="Last name..." oninput="this.className = ''" name="lname"></p>
		</div>
		<div class="tab">Contact Info:
		<p><input placeholder="E-mail..." oninput="this.className = ''" name="email" value="<%- user.email||'' %>"></p>
		<p><input placeholder="Phone..." oninput="this.className = ''" name="phone"></p>
		</div>
		<div class="tab">Birthday:
		<p><input placeholder="dd" oninput="this.className = ''" name="dd"></p>
		<p><input placeholder="mm" oninput="this.className = ''" name="mm"></p>
		<p><input placeholder="yyyy" oninput="this.className = ''" name="yyyy"></p>
		</div>
		<div class="tab">Login Info:
		<!-- <p><input placeholder="Username..." oninput="this.className = ''" name="uname"></p> -->
		<p><input placeholder="Password..." oninput="this.className = ''" name="password" type="password" id="password" required></p>
		<p><input placeholder="Confirm password..." oninput="this.className = ''" name="confirm_password" type="password" id="confirm_password" required></p>
		</div>
		<div style="overflow:auto;">
		<div style="float:right;">
			<button class="w3-round" type="button" id="prevBtn" onclick="nextPrev(-1)">Previous</button>
			<button class="w3-round" type="button" id="nextBtn" onclick="nextPrev(1)">Next</button>
		</div>
		</div>
		<!-- Circles which indicates the steps of the form: -->
		<div style="text-align:center;margin-top:40px;">
		<span class="step"></span>
		<span class="step"></span>
		<span class="step"></span>
		<span class="step"></span>
		</div>
	</form>
</div>

<script>
	const next = document.getElementById("nextBtn");

	const password = document.getElementById("password")
  		, confirm_password = document.getElementById("confirm_password")
		, submit = next;
  		;



	var currentTab = 0; // Current tab is set to be the first tab (0)
	showTab(currentTab); // Display the current tab

	
	function showTab(n) {
	  // This function will display the specified tab of the form...
	  var x = document.getElementsByClassName("tab");
	  x[n].style.display = "block";
	  //... and fix the Previous/Next buttons:
	  if (n == 0) {
		document.getElementById("prevBtn").style.display = "none";
	  } else {
		document.getElementById("prevBtn").style.display = "inline";
	  }
	  if (n == (x.length - 1)) {
		next.innerHTML = "Submit";
		validatePassword();
	  } else {
		next.innerHTML = "Next";
		next.disabled = false;
	  }
	  //... and run a function that will display the correct step indicator:
	  fixStepIndicator(n)
	}
	
	function nextPrev(n) {
	  // This function will figure out which tab to display
	  var x = document.getElementsByClassName("tab");
	  // Exit the function if any field in the current tab is invalid:
	  if (n == 1 && !validateForm()) return false;
	  // Hide the current tab:
	  x[currentTab].style.display = "none";
	  // Increase or decrease the current tab by 1:
	  currentTab = currentTab + n;
	  // if you have reached the end of the form...
	  if (currentTab >= x.length) {
		// ... the form gets submitted:
		document.getElementById("regForm").submit();
		return false;
	  }
	  // Otherwise, display the correct tab:
	  showTab(currentTab);
	}
	
	function validateForm() {
	  // This function deals with validation of the form fields
	  var x, y, i, valid = true;
	  x = document.getElementsByClassName("tab");
	  y = x[currentTab].getElementsByTagName("input");
	  // A loop that checks every input field in the current tab:
	  for (i = 0; i < y.length; i++) {
		// If a field is empty...
		if (y[i].value == "") {
		  // add an "invalid" class to the field:
		  y[i].className += " invalid";
		  // and set the current valid status to false
		  valid = false;
		}
	  }
	  // If the valid status is true, mark the step as finished and valid:
	  if (valid) {
		document.getElementsByClassName("step")[currentTab].className += " finish";
	  }

	//   next.disabled = !valid;

	  return valid; // return the valid status
	}
	
	function fixStepIndicator(n) {
	  // This function removes the "active" class of all steps...
	  var i, x = document.getElementsByClassName("step");
	  for (i = 0; i < x.length; i++) {
		x[i].className = x[i].className.replace(" active", "");
	  }
	  //... and adds the "active" class on the current step:
	  x[n].className += " active";
	}

	
	function validatePassword(){

		var valid = false;

		const pass = password.value;


		if (pass.length > 3) {

			if(pass != confirm_password.value) {
				confirm_password.setCustomValidity("Passwords Don't Match");
			} else {
				valid = true;
				confirm_password.setCustomValidity('');
			}
		}

		submit.disabled = !valid;
	}

	password.onchange = validatePassword;
	confirm_password.onkeyup = validatePassword;
</script>